<?php

namespace app\controllers;

use app\blog\forms\PostForm;
use app\blog\repositories\PostRepository;
use app\blog\services\PostManageService;
use app\blog\services\PostViewService;
use Yii;
use yii\filters\AccessControl;
use yii\filters\VerbFilter;
use yii\web\Controller;
use yii\web\UploadedFile;

class PostController extends Controller
{
    private $service;
    private $viewService;

    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::class,
                'only' => ['create', 'update', 'delete'],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::class,
                'actions' => [
                    'create' => ['post', 'get'],
                    'update' => ['post'],
                    'view' => ['get'],
                    'delete' => ['post']
                ],
            ]
        ]; // TODO: Change the autogenerated stub
    }

    public function __construct($id, $module, PostManageService $service, PostViewService $viewService, $config = [])
    {
        $this->service=$service;
        $this->viewService=$viewService;
        parent::__construct($id, $module, $config);
    }

    public function actionCreate()
    {
        $form=new PostForm();
        if ($form->load(Yii::$app->request->post())) {
            $form->files = UploadedFile::getInstances($form, 'files');
            if ($form->validate()) {
                $this->service->create($form);
                $this->goHome();
            }
        }
        return $this->render('create', ['model' => $form]);
    }

    public function actionEdit($id)
    {

    }

    public function actionPublish($id)
    {

    }

    public function actionHide($id)
    {

    }

    public function actionView($id)
    {
        //idk where it should be prepared to be passed to the view
        $post=$this->viewService->load($id);
        return $this->render('view', ['post' => $post]);
    }

    public function actionDelete($id)
    {

    }

}